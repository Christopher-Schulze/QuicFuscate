name: Build Patched Quiche

on:
  push:
    branches: [ main, master ]
    paths:
      - 'libs/patches/**'
      - 'scripts/**'
      - '.github/workflows/build-quiche.yml'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type (release/debug)'
        required: true
        default: 'release'
        type: choice
        options:
        - release
        - debug

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        fetch-depth: 0

    - name: Init submodules
      run: git submodule update --init --recursive
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
        target: x86_64-unknown-linux-gnu
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends \
          cmake \
          build-essential \
          pkg-config \
          libssl-dev \
          patch
          git
    
    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: fetch_quiche
      run: |
        chmod +x ./scripts/quiche_workflow.sh
        ./scripts/quiche_workflow.sh --step fetch

    - name: Set QUICHE_PATH
      run: echo "QUICHE_PATH=${{ github.workspace }}/libs/patched_quiche/quiche" >> $GITHUB_ENV

    - name: apply_patches
      run: |
        chmod +x ./scripts/quiche_workflow.sh
        ./scripts/quiche_workflow.sh --step patch

    - name: verify_patches
      run: |
        chmod +x ./scripts/quiche_workflow.sh
        ./scripts/quiche_workflow.sh --step verify_patches

    - name: build_quiche
      run: |
        chmod +x ./scripts/quiche_workflow.sh
        ./scripts/quiche_workflow.sh --step build --type ${{ inputs.build_type || 'release' }}

    - name: test_quiche
      run: |
        chmod +x ./scripts/quiche_workflow.sh
        ./scripts/quiche_workflow.sh --step test

    - name: Upload Test Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: quiche-test-logs
        path: libs/logs/
        retention-days: 7
        compression-level: 9

    - name: Build QuicFuscate binaries
      run: |
        if [ "${{ inputs.build_type || 'release' }}" = "release" ]; then
          cargo build --release
        else
          cargo build
        fi

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: quiche-artifacts
        path: |
          libs/patched_quiche/target/${{ inputs.build_type || 'release' }}/quiche
          libs/patched_quiche/target/${{ inputs.build_type || 'release' }}/deps/*.rlib
          target/${{ inputs.build_type || 'release' }}/quicfuscate*
        retention-days: 7
        compression-level: 9
    
    - name: Create GitHub Release
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v2
      with:
        files: |
          libs/patched_quiche/target/${{ inputs.build_type || 'release' }}/quiche
          libs/patched_quiche/target/${{ inputs.build_type || 'release' }}/*.a
          libs/patched_quiche/target/${{ inputs.build_type || 'release' }}/deps/*.rlib
          target/${{ inputs.build_type || 'release' }}/quicfuscate*
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
