# Makefile für die QuicSand CLI mit uTLS-Integration

CXX = clang++
CXXFLAGS = -std=c++17 -Wall -Wextra -I. -I/opt/homebrew/opt/openssl@3/include -I/opt/homebrew/include
LDFLAGS = -L/opt/homebrew/lib -L/opt/homebrew/opt/openssl@3/lib -lboost_system -lboost_thread -lboost_program_options -lssl -lcrypto -lquiche

# Pfad zur quiche-Bibliothek
QUICHE_LIB_PATH = /Users/christopher/CODE/libs/quiche-patched/build

# Output-Verzeichnis
BUILD_DIR = build
BIN_DIR = $(BUILD_DIR)/bin

# Source-Dateien
SRCS = cli/main.cpp \
       tls/utls_client_configurator.cpp \
       tls/quiche_utls_wrapper.cpp \
       core/quic_connection.cpp \
       core/quic_stream.cpp

OBJS = $(SRCS:.cpp=.o)

# Standardziel
.PHONY: all
all: $(BIN_DIR)/quicsand-cli

# Build-Verzeichnisse erstellen
$(BUILD_DIR):
	mkdir -p $(BUILD_DIR)

$(BIN_DIR): $(BUILD_DIR)
	mkdir -p $(BIN_DIR)

# Objektdateien kompilieren
%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

# CLI-Anwendung bauen
$(BIN_DIR)/quicsand-cli: $(OBJS) | $(BIN_DIR)
	$(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS) -L$(QUICHE_LIB_PATH)

# Installation (optional)
.PHONY: install
install: $(BIN_DIR)/quicsand-cli
	cp $(BIN_DIR)/quicsand-cli /usr/local/bin/

# Hilfe anzeigen
.PHONY: help
help:
	@echo "QuicSand CLI mit uTLS-Integration"
	@echo "================================"
	@echo "make             - CLI-Anwendung kompilieren"
	@echo "make install     - CLI-Anwendung installieren (benötigt admin-Rechte)"
	@echo "make clean       - Build-Artefakte aufräumen"
	@echo "make run         - CLI-Anwendung mit Standardparametern ausführen"
	@echo "make run-chrome  - Mit Chrome-Fingerprint ausführen"
	@echo "make run-firefox - Mit Firefox-Fingerprint ausführen"
	@echo "make run-safari  - Mit Safari-Fingerprint ausführen"
	@echo "make run-random  - Mit zufälligem Fingerprint ausführen"

# Einfache Run-Targets für Tests
.PHONY: run
run: $(BIN_DIR)/quicsand-cli
	$(BIN_DIR)/quicsand-cli --server example.com --port 443 --fingerprint chrome

.PHONY: run-chrome
run-chrome: $(BIN_DIR)/quicsand-cli
	$(BIN_DIR)/quicsand-cli --server example.com --port 443 --fingerprint chrome

.PHONY: run-firefox
run-firefox: $(BIN_DIR)/quicsand-cli
	$(BIN_DIR)/quicsand-cli --server example.com --port 443 --fingerprint firefox

.PHONY: run-safari
run-safari: $(BIN_DIR)/quicsand-cli
	$(BIN_DIR)/quicsand-cli --server example.com --port 443 --fingerprint safari

.PHONY: run-random
run-random: $(BIN_DIR)/quicsand-cli
	$(BIN_DIR)/quicsand-cli --server example.com --port 443 --fingerprint random

# Aufräumen
.PHONY: clean
clean:
	rm -f $(OBJS)
	rm -f $(BIN_DIR)/quicsand-cli
